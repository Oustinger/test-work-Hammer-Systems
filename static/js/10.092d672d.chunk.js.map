{"version":3,"sources":["views/app-views/commons/clients/clientsList/ClientList.module.css","components/shared-components/AvatarStatus/index.js","views/app-views/commons/clients/clientsList/ClientView.js","views/app-views/commons/clients/clientsList/ClientList.js","views/app-views/commons/clients/clientsList/index.js"],"names":["module","exports","renderAvatar","props","className","type","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","ClientView","this","data","visible","close","width","placement","onClose","closable","img","username","dashed","UserOutlined","MobileOutlined","phone","MailOutlined","email","CompassOutlined","address","city","street","suite","GlobalOutlined","href","website","PureComponent","ClientList","React","memo","clients","viewState","deleteClient","showClientProfile","closeClientProfile","history","currentUrl","clientProfileVisible","selectedClient","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","company","elm","EyeOutlined","e","stopPropagation","danger","DeleteOutlined","bodyStyle","padding","columns","dataSource","rowKey","onRow","push","rowClassName","styles","tableRow","compose","connect","state","isLoading","app","clientsData","getClientsData","withRouter","useEffect","useState","clientsState","setClientsState","prevState","clientViewState","setClientViewState","Loading","cover","clientsId","filter","item","message","success","content","duration","clientInfo","APP_PREFIX_PATH"],"mappings":"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","file":"static/js/10.092d672d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"ClientList_tableRow__qGTwm\"};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import {\r\n    CompassOutlined, GlobalOutlined, MailOutlined, MobileOutlined, UserOutlined\r\n} from '@ant-design/icons';\r\nimport { Avatar, Divider, Drawer } from 'antd';\r\nimport React, { PureComponent } from 'react';\r\n\r\nexport class ClientView extends PureComponent {\r\n  render() {\r\n    const { data, visible, close } = this.props;\r\n    return (\r\n      <Drawer width={300} placement=\"right\" onClose={close} closable={false} visible={visible}>\r\n        <div className=\"text-center mt-3\">\r\n          <Avatar size={80} src={data?.img} />\r\n          <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n          <span className=\"text-muted\">{data?.username}</span>\r\n        </div>\r\n        <Divider dashed />\r\n        <div className=\"\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n          <p>\r\n            <UserOutlined />\r\n            <span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n          <p>\r\n            <MobileOutlined />\r\n            <span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n          </p>\r\n          <p>\r\n            <MailOutlined />\r\n            <span className=\"ml-3 text-dark\">{data?.email ? data?.email : '-'}</span>\r\n          </p>\r\n          <p>\r\n            <CompassOutlined />\r\n            <span className=\"ml-3 text-dark\">\r\n              {data?.address ? `${data?.address.city}, ${data?.address.street}, ${data?.address.suite}` : '-'}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"text-muted text-uppercase mb-3\">Social profiles</h6>\r\n          <p>\r\n            <GlobalOutlined />\r\n            <a href=\"/#\" className=\"ml-3 text-dark\">\r\n              {data?.website ? data?.website : '-'}\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientView;\r\n","import { DeleteOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Table, Tooltip } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport React from 'react';\r\nimport ClientView from './ClientView';\r\nimport styles from './ClientList.module.css';\r\n\r\nconst ClientList = React.memo(\r\n  ({ clients, viewState, deleteClient, showClientProfile, closeClientProfile, history, currentUrl }) => {\r\n    const { clientProfileVisible, selectedClient } = viewState;\r\n\r\n    const tableColumns = [\r\n      {\r\n        title: 'Client',\r\n        dataIndex: 'name',\r\n        render: (_, record) => (\r\n          <div className=\"d-flex\">\r\n            <AvatarStatus src={record.img} name={record.name} subTitle={record.email} />\r\n          </div>\r\n        ),\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            a = a.name.toLowerCase();\r\n            b = b.name.toLowerCase();\r\n            return a > b ? -1 : b > a ? 1 : 0;\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: 'User name',\r\n        dataIndex: 'username',\r\n      },\r\n      {\r\n        title: 'City',\r\n        dataIndex: ['address', 'city'],\r\n      },\r\n      {\r\n        title: 'Company',\r\n        dataIndex: ['company', 'name'],\r\n        sorter: {\r\n          compare: (a, b) => {\r\n            if (a.company.name < b.company.name) return -1;\r\n            if (a.company.name > b.company.name) return 1;\r\n            return 0;\r\n          },\r\n        },\r\n      },\r\n      {\r\n        title: 'Website',\r\n        dataIndex: 'website',\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'actions',\r\n        render: (_, elm) => (\r\n          <div className=\"text-right\">\r\n            <Tooltip title=\"View\">\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"mr-2\"\r\n                icon={<EyeOutlined />}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  showClientProfile(elm);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <Button\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deleteClient(elm.id);\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const onRowClick = (record) => {\r\n      return {\r\n        onClick: () => {\r\n          history.push(`${currentUrl}/${record.id}`);\r\n        },\r\n      };\r\n    };\r\n\r\n    return (\r\n      <Card bodyStyle={{ padding: '0px' }}>\r\n        <Table columns={tableColumns} dataSource={clients} rowKey=\"id\" onRow={onRowClick} rowClassName={styles.tableRow} />\r\n        <ClientView\r\n          data={selectedClient}\r\n          visible={clientProfileVisible}\r\n          close={() => {\r\n            closeClientProfile();\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ClientList;\r\n","import { message } from 'antd';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getClientsData } from './../../../../../redux/actions/App';\r\nimport ClientList from './ClientList';\r\n\r\nconst ClientsListContainer = (props) => {\r\n  const clientsData = props.clientsData;\r\n  useEffect(() => {\r\n    if (clientsData === null) {\r\n      props.getClientsData();\r\n    }\r\n  }, [props, clientsData]);\r\n\r\n  const [clientsState, setClientsState] = useState({\r\n    clients: clientsData,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setClientsState((prevState) =>\r\n      prevState.clients\r\n        ? clientsState\r\n        : {\r\n            clients: clientsData,\r\n          }\r\n    );\r\n  }, [clientsState, clientsData]);\r\n\r\n  const deleteClient = (clientsId) => {\r\n    setClientsState({\r\n      clients: clientsState.clients.filter((item) => item.id !== clientsId),\r\n    });\r\n    message.success({ content: `Deleted client ${clientsId}`, duration: 2 });\r\n  };\r\n\r\n  const [clientViewState, setClientViewState] = useState({\r\n    clientProfileVisible: false,\r\n    selectedClient: null,\r\n  });\r\n\r\n  const showClientProfile = (clientInfo) => {\r\n    setClientViewState({\r\n      clientProfileVisible: true,\r\n      selectedClient: clientInfo,\r\n    });\r\n  };\r\n\r\n  const closeClientProfile = () => {\r\n    setClientViewState({\r\n      clientProfileVisible: false,\r\n      selectedClient: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isLoading ? (\r\n        <Loading cover=\"content\" />\r\n      ) : (\r\n        <ClientList\r\n          clients={clientsState.clients}\r\n          viewState={clientViewState}\r\n          deleteClient={deleteClient}\r\n          showClientProfile={showClientProfile}\r\n          closeClientProfile={closeClientProfile}\r\n          history={props.history}\r\n          currentUrl={`${APP_PREFIX_PATH}/commons/clients/list/edit`}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.app.isLoading,\r\n  clientsData: state.app.clientsData,\r\n});\r\n\r\nexport default compose(React.memo, connect(mapStateToProps, { getClientsData }), withRouter)(ClientsListContainer);\r\n"],"sourceRoot":""}