{"version":3,"sources":["views/app-views/commons/clients/clientsList/editClient/EditClientForm.js","views/app-views/commons/clients/clientsList/editClient/index.js"],"names":["EditClientForm","React","memo","name","username","email","phone","website","addressCity","addressStreet","addressSuite","addressZipcode","addressGeoLat","addressGeoLng","companyName","companyCatchPhrase","companyBs","onFinish","onFinishFailed","className","layout","initialValues","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","message","type","htmlType","EditClient","props","clientId","parseInt","match","params","clientsData","getClientsData","client","find","id","this","isLoading","Loading","cover","address","city","street","suite","zipcode","geo","lat","lng","company","catchPhrase","bs","values","data","lgn","setNewClientData","key","loading","content","setTimeout","success","duration","history","push","APP_PREFIX_PATH","errorInfo","console","log","Component","compose","connect","state","app","withRouter"],"mappings":"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","file":"static/js/12.b9c84f9b.chunk.js","sourcesContent":["import { Button, Col, Form, Input, Row } from 'antd';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport React from 'react';\r\n\r\nconst EditClientForm = React.memo(({\r\n  name,\r\n  username,\r\n  email,\r\n  phone,\r\n  website,\r\n  addressCity,\r\n  addressStreet,\r\n  addressSuite,\r\n  addressZipcode,\r\n  addressGeoLat,\r\n  addressGeoLng,\r\n  companyName,\r\n  companyCatchPhrase,\r\n  companyBs,\r\n  onFinish,\r\n  onFinishFailed\r\n}) => (\r\n  <div className=\"mt-4\">\r\n    <Form\r\n      name=\"basicInformation\"\r\n      layout=\"vertical\"\r\n      initialValues={{\r\n        name,\r\n        username,\r\n        email,\r\n        phone,\r\n        website,\r\n        addressCity,\r\n        addressStreet,\r\n        addressSuite,\r\n        addressZipcode,\r\n        addressGeoLat,\r\n        addressGeoLng,\r\n        companyName,\r\n        companyCatchPhrase,\r\n        companyBs,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24} lg={16}>\r\n          <Row gutter={ROW_GUTTER}>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your name!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your username!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    type: 'email',\r\n                    message: 'Please enter a valid email!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Phone Number\" name=\"phone\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Website\" name=\"website\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"City\" name=\"addressCity\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Street\" name=\"addressStreet\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Suite\" name=\"addressSuite\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Zipcode\" name=\"addressZipcode\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24}>\r\n              <h3>Geolocation</h3>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Geo latitude\" name=\"addressGeoLat\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Geo longitude\" name=\"addressGeoLng\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24}>\r\n              <h3>Company</h3>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Name\" name=\"companyName\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Catch phrase\" name=\"companyCatchPhrase\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={12}>\r\n              <Form.Item label=\"Bs\" name=\"companyBs\">\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Save Change\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  </div>\r\n));\r\n\r\nexport default EditClientForm;\r\n","import { message } from 'antd';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getClientsData, setNewClientData } from 'redux/actions/App';\r\nimport EditClientForm from './EditClientForm';\r\n\r\nclass EditClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.clientId = parseInt(this.props.match.params.clientId);\r\n\r\n    if (this.clientId) {\r\n      if (this.props.clientsData === null) {\r\n        this.props.getClientsData();\r\n      } else {\r\n        this.client = this.props.clientsData.find((client) => client.id === this.clientId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.clientId && !this.client && this.props.clientsData !== null)\r\n      this.client = this.props.clientsData.find((client) => client.id === this.clientId);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.clientId && !this.client)\r\n      this.client = this.props.clientsData.find((client) => client.id === this.clientId);\r\n  }\r\n\r\n  render() {\r\n    const onFinish = (values) => {\r\n      const data = {\r\n        id: this.client.id,\r\n        name: values.name,\r\n        username: values.username,\r\n        email: values.email,\r\n        phone: values.phone,\r\n        website: values.website,\r\n        address: {\r\n          city: values.addressCity,\r\n          street: values.addressStreet,\r\n          suite: values.addressSuite,\r\n          zipcode: values.addressZipcode,\r\n          geo: {\r\n            lat: values.addressGeoLat,\r\n            lgn: values.addressGeoLng,\r\n          },\r\n        },\r\n        company: {\r\n          name: values.name,\r\n          catchPhrase: values.catchPhrase,\r\n          bs: values.bs,\r\n        },\r\n      };\r\n\r\n      this.props.setNewClientData(data);\r\n\r\n      const key = 'updatable';\r\n      message.loading({ content: 'Updating...', key });\r\n      setTimeout(() => {\r\n        message.success({ content: 'Done!', key, duration: 2 });\r\n        this.props.history.push(`${APP_PREFIX_PATH}/commons/clients/list`);\r\n      }, 1000);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {this.props.isLoading ? (\r\n          <Loading cover=\"content\" />\r\n        ) : !this.clientId ? (\r\n          <h2>Error: Client ID not specified</h2>\r\n        ) : !this.client ? (\r\n          <h2>Error: Client ID is not correct</h2>\r\n        ) : (\r\n          <EditClientForm\r\n            name={this.client.name}\r\n            username={this.client.username}\r\n            email={this.client.email}\r\n            phone={this.client.phone}\r\n            website={this.client.website}\r\n            addressCity={this.client.address.city}\r\n            addressStreet={this.client.address.street}\r\n            addressSuite={this.client.address.suite}\r\n            addressZipcode={this.client.address.zipcode}\r\n            addressGeoLat={this.client.address.geo.lat}\r\n            addressGeoLng={this.client.address.geo.lng}\r\n            companyName={this.client.company.name}\r\n            companyCatchPhrase={this.client.company.catchPhrase}\r\n            companyBs={this.client.company.bs}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: state.app.isLoading,\r\n  clientsData: state.app.clientsData,\r\n});\r\n\r\nexport default compose(\r\n  React.memo,\r\n  connect(mapStateToProps, {\r\n    setNewClientData,\r\n    getClientsData,\r\n  }),\r\n  withRouter\r\n)(EditClient);\r\n"],"sourceRoot":""}